import mockjs from 'mockjs';

const declaration = {
  categorie: 60,
  codeIntermediaire: '1234',
  codeUtilisateur: 'ABCDE',
  dateConsultation: '10/06/2019',
  dateReception: '12/06/2019',
  dateTraitement: '13/06/2019',
  decompte: 0,
  frais: 0,
  id: 0,
  malade: 'string',
  nature: 'string',
  nomAdherent: 'string',
  nomClient: 'string',
  numeroAdherent: 0,
  numeroBeneficiaire: 0,
  numeroBordereau: 0,
  numeroCheque: 0,
  numeroClient: 0,
  numeroContrat: 0,
  observation: 'string',
  pathologie: 'string',
  rib: 'string',
  statut: 'string',
  type: 'string',
};

const prestations = [
  {
    id: 93414152,
    numeroDeclaration: -900000008,
    nomPrestation: 'Analyses medicales',
    tauxRembourssement: null,
    plafond: 0,
    fraisEngage: 1.07,
    baseRembourssement: 300.0,
    montantNonRembourse: null,
    montantDejaRembourse: null,
    decompte: null,
    nombreD: 30,
    codePrestation: 13,
    fraisInitial: 200,
  },
];

const correspondances = mockjs.mock({
  'content|5': [
    {
      dateCorrespondance: '10/07/2019',
      datePvMedecin: '06/07/2019',
      'id|1-5': 0,
      medecin: 'dr. john doe',
      motif: 'ras',
      'numeroDeclaration|5-10': 0,
      typeCorrespondance: 'normal',
    },
  ],
});

const declarations = mockjs.mock({
  'content|100': [
    {
      'categorie|1-5': 0,
      codeIntermediaire: '12345',
      codeUtilisateur: 'ABCDE',
      dateConsultation: '09/06/2019',
      dateReception: '09/06/2019',
      dateTraitement: '09/06/2019',
      'decompte|1-50': 0,
      'frais|1000-10000': 0,
      id: 123,
      malade: 'malade',
      nature: 'normal',
      nomAdherent: 'john doe',
      nomClient: 'john junior',
      'numeroAdherent|1-100': 0,
      'numeroBeneficiaire|1-100': 0,
      'numeroBordereau|1-10': 0,
      'numeroCheque|1-50': 0,
      'numeroClient|1-100': 0,
      'numeroContrat|1-5': 0,
      observation: 'ras',
      pathologie: 'pathologie',
      rib: '0123456789ABCD',
      statut: 'REGLEE',
      type: 'type 1',
      medecin: 'Mr le medecin',
    },
  ],
});

const declarationMaladie = {
  id: -900000008,
  categorie: 60,
  numeroContrat: 363400,
  pathologie: 'Hypertension art√©rielle   (H.T.A)',
  nature: 'TIERS PAYANT',
  type: 'P.C',
  codeIntermediaire: '9106',
  dateConsultation: '08/08/2019',
  dateReception: null,
  dateTraitement: null,
  numeroAdherent: 2180462,
  nomAdherent: 'BAKAR MUSTAPHA',
  malade: 'BAKAR MUSTAPHA',
  numeroBeneficiaire: 1,
  frais: 300.0,
  decompte: null,
  numeroReglement: null,
  modePaiement: '',
  statut: 'NON TRAITEE',
  numeroBordereau: null,
  codeUtilisateur: 'laf',
  observation: 'test',
  numeroClient: 1793,
  nomClient: 'COSUMAR',
  rib: null,
  matricule: '3468',
  dateDemande: '2019-08-19T00:00:00.000+0000',
  cinAdherent: 'XX999999',
  telephone: '0625361402',
  email: 'test@test.com',
  medecin: 'Mr le medecin',
};

const pecId = -900000008;

export default {
  'POST /mock/declarationMaladies': declarations,
  'GET /mock/declarationMaladies/123': declaration,
  'GET /mock/declarationMaladies/-900000008/prestations': prestations,
  'GET /mock/declarationMaladies/123/correspondances': correspondances,
  'GET /mock/declarationMaladies/-900000008/': declarationMaladie,
  'POST /mock/declarationMaladies/creerPEC': {pecId},
  'GET /mock/declarationMaladies/-900000008/envoyer': null,
  'GET /mock/declarationMaladies/-900000008/abandonner': null,
  'POST /mock/declarationMaladies/modifier': null,
};
